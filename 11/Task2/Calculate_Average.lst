
as12, an absolute assembler for Motorola MCU's, version 1.2h

                        ; Calculate_Average.asm
                        ;
                        ; Author:
                        ; Student Number:
                        ; Date:
                        ;
                        
                        ; Purpose:      The purpose of the Calculate_Average_Subroutine is to
                        ;               calculate the average of ANY number of values by dividing
                        ;               the sum of the values by 5 and returning an integer value
                        ;               between 0 and 10
                        
                        ; Precondition:  Y points to fist value
                        ;                B contains numbuer value to average
                        ;                Average out of 50%
                        ;
                        ; Postcondition: Accumulator A - Set to 0
                        ;                Accumulator B - Set to 0
                        ;                Accumulator X - Set to 0
                        ;
                        ;                Math as follow:
                        ;               (sum of elements)/DIVISOR
                        ;               Accumulator D - Contains reminder of the division
                        ;               Accumulator X - Contains the result
                        
0005                    DIVISOR equ     $05
                        
0000                    Calculate_Average
0000 ce 00 05                   ldx     #DIVISOR
                        
0003 35                         pshy                 ; Save the value of y
0004 19 ed                      aby                  ; This loop starts at the end of the array
0006 03                         dey                  ; and works its way to the beginning.
                        
0007 87                         clra
0008 c7                         clrb
                        
0009                    Next
0009 ad 80                      cpy     0,sp         ; Have we reached Start of Array minus 1?
000b 25 0c                      blo     Divide       ; Go and divide if we reached the start.
                        
000d 3b                         pshd                 ; Save the value of D
                        
000e e6 7f                      ldab    1,y-         ; Retrieve the value.
0010 87                         clra
                        
0011 e3 80                      addd    0,sp
0013 1b 81                      ins                  ; Clear the stack
0015 1b 81                      ins
                        
0017 20 f0                      bra     Next         ; Add the next value
                        
0019                    Divide
0019 18 10                      idiv
001b 31                         puly                 ; Get back the original value of Y
                        
001c 3d                         rts

Executed: Wed Apr 18 14:59:36 2018
Total cycles: 45, Total bytes: 29
Total errors: 0, Total warnings: 0
